// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace hairSalonScheduler.Migrations
{
    [DbContext(typeof(SalonDbContext))]
    [Migration("20230429232111_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("hairSalonScheduler.Models.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentStatus")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("SelectedDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<int>("StylistId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ServiceId");

                    b.HasIndex("StylistId");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            PaymentStatus = "Unpaid",
                            SelectedDateTime = new DateTime(2023, 5, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ServiceId = 1,
                            Status = "Scheduled",
                            StylistId = 1
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2,
                            PaymentStatus = "Unpaid",
                            SelectedDateTime = new DateTime(2023, 5, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            ServiceId = 2,
                            Status = "Scheduled",
                            StylistId = 2
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 3,
                            PaymentStatus = "Unpaid",
                            SelectedDateTime = new DateTime(2023, 5, 3, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            ServiceId = 3,
                            Status = "Scheduled",
                            StylistId = 3
                        });
                });

            modelBuilder.Entity("hairSalonScheduler.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<int>("LoyaltyPoints")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main St, Anytown USA",
                            DateOfBirth = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "alice@gmail.com",
                            Gender = 1,
                            LoyaltyPoints = 100,
                            Name = "Alice Smith",
                            Password = "password123"
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 High St, Anytown USA",
                            DateOfBirth = new DateTime(1985, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "bob@gmail.com",
                            Gender = 0,
                            LoyaltyPoints = 50,
                            Name = "Bob Johnson",
                            Password = "password123"
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 Maple Ave, Anytown USA",
                            DateOfBirth = new DateTime(1995, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "charlie@gmail.com",
                            Gender = 2,
                            LoyaltyPoints = 200,
                            Name = "Charlie Brown",
                            Password = "password123"
                        });
                });

            modelBuilder.Entity("hairSalonScheduler.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Availability")
                        .HasColumnType("longtext");

                    b.Property<string>("Category")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("StylistId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StylistId");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Availability = "Mon:10-18,Tue:10-18,Wed:10-18,Thu:10-18,Fri:10-18,Sat:10-16",
                            Category = "Haircut",
                            Price = 50.00m,
                            StylistId = 1
                        },
                        new
                        {
                            Id = 2,
                            Availability = "Mon:9-17,Tue:9-17,Wed:9-17,Thu:9-17,Fri:9-17,Sat:9-15",
                            Category = "Haircut",
                            Price = 45.00m,
                            StylistId = 2
                        },
                        new
                        {
                            Id = 3,
                            Availability = "Mon:10-18,Tue:10-18,Wed:10-18,Thu:10-18,Fri:10-18,Sat:10-16",
                            Category = "Haircut",
                            Price = 55.00m,
                            StylistId = 3
                        },
                        new
                        {
                            Id = 5,
                            Availability = "Mon:10-18,Tue:10-18,Wed:10-18,Thu:10-18,Fri:10-18,Sat:10-16",
                            Category = "Coloring",
                            Price = 120.00m,
                            StylistId = 1
                        },
                        new
                        {
                            Id = 6,
                            Availability = "Mon:9-17,Tue:9-17,Wed:9-17,Thu:9-17,Fri:9-17,Sat:9-15",
                            Category = "Coloring",
                            Price = 130.00m,
                            StylistId = 2
                        },
                        new
                        {
                            Id = 7,
                            Availability = "Mon:10-18,Tue:10-18,Wed:10-18,Thu:10-18,Fri:10-18,Sat:10-16",
                            Category = "Coloring",
                            Price = 110.00m,
                            StylistId = 3
                        });
                });

            modelBuilder.Entity("hairSalonScheduler.Models.Stylist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bio")
                        .HasColumnType("longtext");

                    b.Property<string>("Gender")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("ProfileImage")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Stylists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bio = "Experienced stylist with over 10 years in the industry",
                            Gender = "Male",
                            Name = "John Doe",
                            ProfileImage = "https://via.placeholder.com/150"
                        },
                        new
                        {
                            Id = 2,
                            Bio = "Expert in cutting-edge styles and techniques",
                            Gender = "Female",
                            Name = "Jane Doe",
                            ProfileImage = "https://via.placeholder.com/150"
                        },
                        new
                        {
                            Id = 3,
                            Bio = "Specializes in coloring and highlights",
                            Gender = "Male",
                            Name = "Mark Smith",
                            ProfileImage = "https://via.placeholder.com/150"
                        });
                });

            modelBuilder.Entity("hairSalonScheduler.Models.StylistAvailability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time(6)");

                    b.Property<int>("StylistId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StylistId");

                    b.ToTable("StylistAvailabilities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DayOfWeek = 1,
                            EndTime = new TimeSpan(0, 18, 0, 0, 0),
                            StartTime = new TimeSpan(0, 10, 0, 0, 0),
                            StylistId = 1
                        },
                        new
                        {
                            Id = 2,
                            DayOfWeek = 2,
                            EndTime = new TimeSpan(0, 18, 0, 0, 0),
                            StartTime = new TimeSpan(0, 10, 0, 0, 0),
                            StylistId = 1
                        },
                        new
                        {
                            Id = 3,
                            DayOfWeek = 2,
                            EndTime = new TimeSpan(0, 18, 0, 0, 0),
                            StartTime = new TimeSpan(0, 10, 0, 0, 0),
                            StylistId = 1
                        },
                        new
                        {
                            Id = 4,
                            DayOfWeek = 2,
                            EndTime = new TimeSpan(0, 18, 0, 0, 0),
                            StartTime = new TimeSpan(0, 10, 0, 0, 0),
                            StylistId = 1
                        },
                        new
                        {
                            Id = 5,
                            DayOfWeek = 2,
                            EndTime = new TimeSpan(0, 18, 0, 0, 0),
                            StartTime = new TimeSpan(0, 10, 0, 0, 0),
                            StylistId = 1
                        },
                        new
                        {
                            Id = 6,
                            DayOfWeek = 2,
                            EndTime = new TimeSpan(0, 18, 0, 0, 0),
                            StartTime = new TimeSpan(0, 10, 0, 0, 0),
                            StylistId = 1
                        },
                        new
                        {
                            Id = 7,
                            DayOfWeek = 1,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            StartTime = new TimeSpan(0, 9, 0, 0, 0),
                            StylistId = 2
                        },
                        new
                        {
                            Id = 8,
                            DayOfWeek = 2,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            StartTime = new TimeSpan(0, 9, 0, 0, 0),
                            StylistId = 2
                        },
                        new
                        {
                            Id = 9,
                            DayOfWeek = 2,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            StartTime = new TimeSpan(0, 9, 0, 0, 0),
                            StylistId = 2
                        },
                        new
                        {
                            Id = 10,
                            DayOfWeek = 2,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            StartTime = new TimeSpan(0, 9, 0, 0, 0),
                            StylistId = 2
                        },
                        new
                        {
                            Id = 11,
                            DayOfWeek = 2,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            StartTime = new TimeSpan(0, 9, 0, 0, 0),
                            StylistId = 2
                        },
                        new
                        {
                            Id = 12,
                            DayOfWeek = 2,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            StartTime = new TimeSpan(0, 9, 0, 0, 0),
                            StylistId = 2
                        },
                        new
                        {
                            Id = 13,
                            DayOfWeek = 1,
                            EndTime = new TimeSpan(0, 18, 0, 0, 0),
                            StartTime = new TimeSpan(0, 10, 0, 0, 0),
                            StylistId = 3
                        },
                        new
                        {
                            Id = 14,
                            DayOfWeek = 2,
                            EndTime = new TimeSpan(0, 18, 0, 0, 0),
                            StartTime = new TimeSpan(0, 10, 0, 0, 0),
                            StylistId = 3
                        },
                        new
                        {
                            Id = 15,
                            DayOfWeek = 2,
                            EndTime = new TimeSpan(0, 18, 0, 0, 0),
                            StartTime = new TimeSpan(0, 10, 0, 0, 0),
                            StylistId = 3
                        },
                        new
                        {
                            Id = 16,
                            DayOfWeek = 2,
                            EndTime = new TimeSpan(0, 18, 0, 0, 0),
                            StartTime = new TimeSpan(0, 10, 0, 0, 0),
                            StylistId = 3
                        },
                        new
                        {
                            Id = 17,
                            DayOfWeek = 2,
                            EndTime = new TimeSpan(0, 18, 0, 0, 0),
                            StartTime = new TimeSpan(0, 10, 0, 0, 0),
                            StylistId = 3
                        });
                });

            modelBuilder.Entity("hairSalonScheduler.Models.Appointment", b =>
                {
                    b.HasOne("hairSalonScheduler.Models.Customer", "Customers")
                        .WithMany("Appointments")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hairSalonScheduler.Models.Service", "Services")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hairSalonScheduler.Models.Stylist", "Stylists")
                        .WithMany("Appointments")
                        .HasForeignKey("StylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customers");

                    b.Navigation("Services");

                    b.Navigation("Stylists");
                });

            modelBuilder.Entity("hairSalonScheduler.Models.Service", b =>
                {
                    b.HasOne("hairSalonScheduler.Models.Stylist", "Stylist")
                        .WithMany("Services")
                        .HasForeignKey("StylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stylist");
                });

            modelBuilder.Entity("hairSalonScheduler.Models.StylistAvailability", b =>
                {
                    b.HasOne("hairSalonScheduler.Models.Stylist", "Stylist")
                        .WithMany("Availabilities")
                        .HasForeignKey("StylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stylist");
                });

            modelBuilder.Entity("hairSalonScheduler.Models.Customer", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("hairSalonScheduler.Models.Stylist", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("Availabilities");

                    b.Navigation("Services");
                });
#pragma warning restore 612, 618
        }
    }
}
